// Generated by view binder compiler. Do not edit!
package Family.Map.databinding;

import Family.Map.R;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.Switch;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout activitySettings;

  @NonNull
  public final Switch fatherSideSwitch;

  @NonNull
  public final Switch femaleEventsSwitch;

  @NonNull
  public final Switch lifeLineSwitch;

  @NonNull
  public final RelativeLayout logoutView;

  @NonNull
  public final Switch maleEventsSwitch;

  @NonNull
  public final Switch motherSideSwitch;

  @NonNull
  public final Switch spouseLineSwitch;

  @NonNull
  public final Switch treeLineSwitch;

  private ActivitySettingBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout activitySettings, @NonNull Switch fatherSideSwitch,
      @NonNull Switch femaleEventsSwitch, @NonNull Switch lifeLineSwitch,
      @NonNull RelativeLayout logoutView, @NonNull Switch maleEventsSwitch,
      @NonNull Switch motherSideSwitch, @NonNull Switch spouseLineSwitch,
      @NonNull Switch treeLineSwitch) {
    this.rootView = rootView;
    this.activitySettings = activitySettings;
    this.fatherSideSwitch = fatherSideSwitch;
    this.femaleEventsSwitch = femaleEventsSwitch;
    this.lifeLineSwitch = lifeLineSwitch;
    this.logoutView = logoutView;
    this.maleEventsSwitch = maleEventsSwitch;
    this.motherSideSwitch = motherSideSwitch;
    this.spouseLineSwitch = spouseLineSwitch;
    this.treeLineSwitch = treeLineSwitch;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      RelativeLayout activitySettings = (RelativeLayout) rootView;

      id = R.id.father_side_switch;
      Switch fatherSideSwitch = ViewBindings.findChildViewById(rootView, id);
      if (fatherSideSwitch == null) {
        break missingId;
      }

      id = R.id.female_events_switch;
      Switch femaleEventsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (femaleEventsSwitch == null) {
        break missingId;
      }

      id = R.id.life_line_switch;
      Switch lifeLineSwitch = ViewBindings.findChildViewById(rootView, id);
      if (lifeLineSwitch == null) {
        break missingId;
      }

      id = R.id.logoutView;
      RelativeLayout logoutView = ViewBindings.findChildViewById(rootView, id);
      if (logoutView == null) {
        break missingId;
      }

      id = R.id.male_events_switch;
      Switch maleEventsSwitch = ViewBindings.findChildViewById(rootView, id);
      if (maleEventsSwitch == null) {
        break missingId;
      }

      id = R.id.mother_side_switch;
      Switch motherSideSwitch = ViewBindings.findChildViewById(rootView, id);
      if (motherSideSwitch == null) {
        break missingId;
      }

      id = R.id.spouse_line_switch;
      Switch spouseLineSwitch = ViewBindings.findChildViewById(rootView, id);
      if (spouseLineSwitch == null) {
        break missingId;
      }

      id = R.id.tree_line_switch;
      Switch treeLineSwitch = ViewBindings.findChildViewById(rootView, id);
      if (treeLineSwitch == null) {
        break missingId;
      }

      return new ActivitySettingBinding((RelativeLayout) rootView, activitySettings,
          fatherSideSwitch, femaleEventsSwitch, lifeLineSwitch, logoutView, maleEventsSwitch,
          motherSideSwitch, spouseLineSwitch, treeLineSwitch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
